-- Easy
-- 1. Retrieve all albums from the Album table.
SELECT title FROM album;

-- 2. List all artists in alphabetical order.
SELECT name FROM artist
ORDER BY name;

-- 3. Find the first and last names of all customers.
SELECT CONCAT(first_name, ' ', last_name) FROM customer;

-- 4. Get the names of all tracks from the Track table.
SELECT name FROM track;

-- 5. List all invoices from the year 2010.
SELECT * FROM invoice
WHERE EXTRACT(YEAR FROM invoice_date) = 2021;

-- 6. Find the names of all playlists.
SELECT name FROM playlist;

-- 7. Count the number of employees in the company.
SELECT DISTINCT COUNT(*) FROM employee;

-- 8. List the titles of all albums released by the artist "AC/DC."
SELECT name, title FROM artist ar
JOIN album al
ON ar.artist_id = al.artist_id
WHERE name = 'AC/DC';

-- 9. Retrieve the names of all unique genres in the Genre table.
SELECT DISTINCT name FROM genre;

-- 10. Show all customers who live in the USA.
SELECT CONCAT(first_name, ' ', last_name), country FROM customer
WHERE country = 'USA';

-- Intermediate
-- 11. Retrieve the total number of tracks in each playlist.
SELECT p.name, COUNT(pt.track_id) FROM playlist p
JOIN playlist_track pt
ON p.playlist_id = pt.playlist_id
GROUP BY p.name
ORDER BY count DESC;
-- 12. Get the names of all customers who have made more than 5 purchases.
SELECT CONCAT(c.first_name, ' ', c.last_name), COUNT(invoice_id) FROM invoice i
JOIN customer c
ON c.customer_id = i.customer_id
GROUP BY c.customer_id
HAVING COUNT(invoice_id) > 5;

-- 13. List the top 5 selling tracks in the database.
SELECT track_id, unit_price, quantity FROM invoice_line
ORDER BY quantity DESC
LIMIT 5;

-- 14. Find the total sales revenue generated by each employee.
SELECT * FROM invoice;

-- 15. Get the average invoice total per customer.
SELECT customer_id, ROUND(AVG(unit_price * quantity), 2) AS avg_total FROM invoice i
JOIN invoice_line il
ON i.invoice_id = il.invoice_id
GROUP BY customer_id
ORDER BY avg_total DESC;

-- 16. List all tracks along with their respective genre names.
SELECT t.name, g.name FROM track t
JOIN genre g
ON t.genre_id = g.genre_id;

-- 17. Retrieve the total number of tracks per album.
SELECT a.title, COUNT(t.name) FROM album a
JOIN track t
ON a.album_id = t.album_id
GROUP BY a.title
ORDER BY a.title;

-- 18. Get a list of all customers and their total purchases in descending order.
SELECT CONCAT(first_name, ' ', last_name) AS name, COUNT(invoice_id) FROM customer c
JOIN invoice i 
ON c.customer_id = i.customer_id
GROUP BY name
ORDER BY count DESC;

-- 19. Find the total revenue for each country.
SELECT billing_country, SUM(total) AS total FROM invoice
GROUP BY billing_country
ORDER BY total DESC;

-- 20. Retrieve a list of employees who report to a specific manager.
SELECT reports_to AS manager, STRING_AGG((CONCAT(first_name, ' ', last_name)), ', ') AS employee_list  
FROM employee
GROUP BY manager;

-- Advanced
-- 21. Get the name and total sales amount for the top customer.
-- Find the track with the longest duration and its associated album and artist.
-- Get the total revenue generated per genre.
-- Retrieve a list of customers who have not made any purchases.
-- Find all tracks that belong to more than one playlist.
-- Calculate the total number of tracks sold for each media type.
-- List the names of all customers who have made purchases in more than one country.
-- Get the artist who has sold the most tracks and the total sales amount.
-- List the albums that have no tracks associated with them.
-- Retrieve the names of all employees who have not supervised any other employees.